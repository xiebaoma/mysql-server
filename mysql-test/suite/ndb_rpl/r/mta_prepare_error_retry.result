include/master-slave.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the connection metadata repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START REPLICA; see the 'START REPLICA Syntax' in the MySQL Manual for more information.
[connection master]
######################################################################
# BUG#37331118 Applier prepare error retry
#
# The replication applier normally retries temporary errors occurring
# while applying transactions. Such retry logic is not performed for
# transactions containing row events where the STMT_END_F flag is
# missing.
# For such events, the statement will instead be committed as an
# additional step while applying the subsequent COMMIT query event when
# it is detected that there are still locked tables. When committing the
# statement, temporary errors are not handled properly.
#
# This patch reproduces the problem by writing an epoch trans with
# simulated writes from multiple server ids on the source. The replica
# then uses IGNORE_SERVER_IDS(<last_server_id_in_binlog>) to cause the
# STMT_END_F to be filtered away, thus activating the above-described
# code path in the applier. By holding a lock on one of the rows to be
# updated by the applier, error handling is triggered.
# For reference the test then also triggers error and retry handling
# when STMT_END_F has not been filtered away.
######################################################################
# Populate the source and replica
# - create table and populate with two rows, sync to replica
[connection master]
CREATE TABLE test_multi_server_id (
id INT PRIMARY KEY,
what VARCHAR(128),
epoch INT UNSIGNED
) ENGINE = NDB;
INSERT INTO test_multi_server_id
VALUES (31, "not updated", 0), (32, "not updated", 0);
# Source need log_replica_updates turned on
show variables like 'log_replica_updates';
Variable_name	Value
log_replica_updates	ON
include/sync_slave_sql_with_master.inc
# Replica need both workers and retries to be greater than 1
show variables like 'replica_parallel_workers';
Variable_name	Value
replica_parallel_workers	2
show variables like 'replica_transaction_retries';
Variable_name	Value
replica_transaction_retries	3
include/stop_slave.inc
SELECT * FROM test_multi_server_id ORDER BY id;
id	what	epoch
31	not updated	0
32	not updated	0
# Supress MTA errors generated by test
call mtr.add_suppression(".*worker thread retried transaction [0-9] time.*");
call mtr.add_suppression(".*Worker [0-9] failed executing transaction.*");
call mtr.add_suppression(".*replica coordinator and worker threads are stopped.*");
[connection master]
FLUSH LOGS;
SET @save_debug= @@GLOBAL.debug;
SET @@GLOBAL.debug="+d,ndb_binlog_log_multi_server_id";
SET @@GLOBAL.debug= @save_debug;
SELECT id, what FROM test_multi_server_id ORDER BY id;
id	what
31	change from 31
32	change from 32
# Wait for ndb_binlog thread...
[connection slave1]
begin;
SELECT * FROM test_multi_server_id WHERE id=<other_server_id> FOR UPDATE;
id	what	epoch
<other_server_id>	not updated	0
#
# A) Test error and retry with STMT_END_F filtered away
#     - i.e statement commit from Query_log_event("COMMIT")
#
[connection slave]
CHANGE REPLICATION SOURCE TO
IGNORE_SERVER_IDS = (<last_server_id>);
include/start_slave.inc
# Wait for replication error
include/wait_for_slave_sql_error.inc [errno=1205]
SELECT LAST_ERROR_NUMBER, LAST_ERROR_MESSAGE,
APPLYING_TRANSACTION_RETRIES_COUNT
FROM performance_schema.replication_applier_status_by_worker
WHERE LAST_ERROR_NUMBER != 0;
LAST_ERROR_NUMBER	1205
LAST_ERROR_MESSAGE	Worker NNN failed executing transaction 'ANONYMOUS' at source log master-bin.000002, end_log_pos NNN; Lock wait timeout exceeded; try restarting transaction
APPLYING_TRANSACTION_RETRIES_COUNT	3
SELECT LAST_ERROR_NUMBER, LAST_ERROR_MESSAGE
FROM performance_schema.replication_applier_status_by_coordinator;
LAST_ERROR_NUMBER	1205
LAST_ERROR_MESSAGE	Coordinator stopped because there were error(s) in the worker(s). The most recent failure being: Worker NNN failed executing transaction 'ANONYMOUS' at source log master-bin.000002, end_log_pos NNN. See error log and/or performance_schema.replication_applier_status_by_worker table for more details about this failure or others, if any.
SELECT id, what FROM test_multi_server_id ORDER BY id;
id	what
31	not updated
32	not updated
#
# B) Test error and retry when STMT_END_F has NOT been filtered
#     - i.e statement commit from Rows_log_event
#
[connection slave]
include/stop_slave.inc
CHANGE REPLICATION SOURCE TO IGNORE_SERVER_IDS = ();
include/start_slave.inc
# Wait for replication error
include/wait_for_slave_sql_error.inc [errno=1205]
SELECT LAST_ERROR_NUMBER, LAST_ERROR_MESSAGE,
APPLYING_TRANSACTION_RETRIES_COUNT
FROM performance_schema.replication_applier_status_by_worker
WHERE LAST_ERROR_NUMBER != 0;
LAST_ERROR_NUMBER	1205
LAST_ERROR_MESSAGE	Worker NNN failed executing transaction 'ANONYMOUS' at source log master-bin.000002, end_log_pos NNN; Lock wait timeout exceeded; try restarting transaction
APPLYING_TRANSACTION_RETRIES_COUNT	3
SELECT LAST_ERROR_NUMBER, LAST_ERROR_MESSAGE
FROM performance_schema.replication_applier_status_by_coordinator;
LAST_ERROR_NUMBER	1205
LAST_ERROR_MESSAGE	Coordinator stopped because there were error(s) in the worker(s). The most recent failure being: Worker NNN failed executing transaction 'ANONYMOUS' at source log master-bin.000002, end_log_pos NNN. See error log and/or performance_schema.replication_applier_status_by_worker table for more details about this failure or others, if any.
SELECT id, what FROM test_multi_server_id ORDER BY id;
id	what
31	not updated
32	not updated
[connection slave1]
# Release lock
commit;
# Start replication again
[connection slave]
include/start_slave.inc
SELECT id, what FROM test_multi_server_id ORDER BY id;
id	what
31	change from 31
32	change from 32
# Cleanup
[connection master]
DROP TABLE test_multi_server_id;
include/rpl_end.inc
